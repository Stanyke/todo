{"version":3,"sources":["components/users.js","components/new-todo.js","components/edit-user.js","components/view-user.js","components/edit-todo.js","App.js","serviceWorker.js","index.js"],"names":["AllUsers","props","state","fullname","erroMsg","axios","get","then","response","console","log","setState","data","users","catch","error","this","class","to","length","map","names","key","id","name","onClick","onDelete","col","window","confirm","linkTo","reply","document","getElementById","delete","status","innerHTML","location","href","Component","CreateTodo","description","user_id","align","rows","value","onChange","target","type","saveIn","alert","newTodo","post","React","UserEdit","uid","match","params","url","res","userName","Name","readOnly","updateMe","upadtedName","patch","UserView","todos","todo","TodoEdit","tid","taskDescription","Description","tastStatus","State","taskUserId","User_id","updateTodo","upadtedTodo","App","className","path","exact","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7e7274f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass AllUsers extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fullname:[],\r\n            erroMsg:\"\"\r\n       }\r\n      }\r\n\r\n      componentDidMount()\r\n      {\r\n        axios.get('https://todobud.herokuapp.com/api/users')\r\n        .then(response =>\r\n          {\r\n            console.log(response)\r\n            this.setState({fullname: response.data.users})\r\n          })\r\n          .catch(error =>\r\n            {\r\n              console.log(error)\r\n              this.setState({erroMsg: 'Error Getting Users'})\r\n            })\r\n      }\r\n\r\n      render(){\r\n\r\n        const { fullname, erroMsg } = this.state\r\n        return (\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"newT\">\r\n                <Link class=\"btn btn-outline-success\" to=\"/new-todo\">New Todo</Link>\r\n              </div>\r\n\r\n              <br/>\r\n              <table class=\"table\">\r\n                  \r\n                  \r\n              {\r\n                fullname.length ?\r\n                fullname.map(names => <div key={names.id}>\r\n                <tbody class=\"thead-dark\">\r\n                    <tr>\r\n                      <th>{names.id}</th>\r\n                      <td class=\"col-4\">{names.name}</td>\r\n                      <td class=\"col-2\"><Link class=\"btn btn-outline-info\" to={\"/view-user/\"+names.id}>View</Link></td>\r\n                      <td class=\"col-2\"><Link class=\"btn btn-outline-info\" to={\"/edit-user/\"+names.id}>Update</Link></td>\r\n                      <td class=\"col-2\"><button class=\"btn-danger\" onClick={()=>this.onDelete(names.id)}>Delete</button></td>\r\n                    </tr>\r\n                  </tbody>\r\n                  </div>) : null\r\n                }\r\n                {\r\n                  erroMsg ? <div col=\"12\">{erroMsg}</div> : null\r\n                }\r\n                \r\n               </table>\r\n\r\n               <div class=\"col-12\">\r\n                <div id=\"reply\"></div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      onDelete(id)\r\n      {\r\n        let deleteNotice = window.confirm(\"You Are About To Delete This User\");\r\n        if (deleteNotice === true)\r\n        {\r\n          let userId = id;\r\n\r\n          const linkTo = \"https://todobud.herokuapp.com/api/users/\"+userId;\r\n\r\n          let reply = document.getElementById('reply');\r\n    \r\n          axios.delete(linkTo)\r\n          .then(response => \r\n          {\r\n            if (response.status === 201)\r\n            {\r\n              reply.innerHTML = \"User Deleted Successfully\";\r\n              window.location.href = '/';\r\n            }\r\n    \r\n            if (response.status === 400)\r\n            {\r\n              reply.innerHTML = \"We Encountered An Issue Deleting This User\";\r\n              window.location.href = '/';\r\n            }\r\n          })\r\n          .catch ( error => \r\n            {\r\n              if (error.response.status === 400)\r\n              {\r\n                reply.innerHTML = \"User with such ID does not exist\";\r\n              }\r\n    \r\n              if (error.response.status === 500)\r\n              {\r\n                reply.innerHTML = \"We Encoutered An Error Getting User\";\r\n              }\r\n          })\r\n        }\r\n        else\r\n        {\r\n          return\r\n        }\r\n      }\r\n    }\r\n\r\nexport default AllUsers;","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../App.css';\r\n\r\nclass CreateTodo extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        description: \"\",\r\n        state: \"\",\r\n        user_id: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n        \r\n        <div class=\"newT\">\r\n          <Link class=\"btn btn-outline-success\" to=\"/\">Homepage</Link>\r\n        </div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">Todo's Description</div>\r\n          <textarea class=\"form-control\" id=\"describe\" rows=\"3\" value={this.state.description} onChange={(value)=> this.setState({description:value.target.value})}></textarea>\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">Todo's State</div>\r\n          <select class=\"form-control\" id=\"tstate\" onChange={(value)=> this.setState({state:value.target.value})}>\r\n            <option value=\"todo\">Todo</option>\r\n            <option value=\"done\">Done</option>\r\n          </select>\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">User's ID</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"uid\" value={this.state.user_id} onChange={(value)=> this.setState({user_id:value.target.value})} />\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-6\">\r\n          <button type=\"submit\" class=\"btn btn-primary col-12\" onClick={()=>this.saveIn()}>Submit</button>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n\r\n        <div class=\"col-12\">\r\n          <div id=\"reply\"></div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n\r\n  saveIn()\r\n  {\r\n    const reply = document.getElementById(\"reply\");\r\n\r\n    if (this.state.description === \"\")\r\n    {\r\n      alert(\"Todo's Description is empty\")\r\n    }\r\n    else if (this.state.user_id === \"\")\r\n    {\r\n      alert(\"User's Id is empty\")\r\n    }\r\n    else\r\n    {     \r\n      const linkTo = \"https://todobud.herokuapp.com/api/todos\"\r\n      \r\n      const newTodo = {\r\n        description: this.state.description,\r\n        state: this.state.state,\r\n        user_id: this.state.user_id\r\n      }\r\n    \r\n      axios.post(linkTo,newTodo)\r\n      .then(response =>\r\n      {\r\n          if (response.status === 500)\r\n          {\r\n            reply.innerHTML = \"We Encoutered An Error Creating Todo\";\r\n          }\r\n          if (response.status === 201)\r\n          {\r\n            reply.innerHTML = \"Task successfully Created\";\r\n          }\r\n        console.log(response);\r\n      })\r\n      .catch(error =>\r\n      {\r\n        if (error.response.status === 400)\r\n        {\r\n          reply.innerHTML = \"User with such ID does not exist\";\r\n        }\r\n        if (error.response.status === 500)\r\n        {\r\n          reply.innerHTML = \"We Encoutered An Error Verifying User\";\r\n        }\r\n        console.log(error);\r\n      })\r\n   }\r\n\r\n  }\r\n}\r\n\r\nexport default CreateTodo","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst linkTo = \"https://todobud.herokuapp.com\"\r\n\r\nclass UserEdit extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      uid: this.props.match.params.id,\r\n      name: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    let userId = this.props.match.params.id;\r\n\r\n    const url = linkTo+\"/api/users/\"+userId\r\n    axios.get(url)\r\n    .then(res =>\r\n      {\r\n        if (res.data)\r\n        {\r\n          const userName = res.data.Name;\r\n          this.setState({ name : userName })\r\n        }\r\n        else\r\n        {\r\n          alert(\"We Encoutered An Error While Getting User's Data\")\r\n        }\r\n    })\r\n    .catch(error=>{\r\n      alert(\"We Encoutered An Error Getting User\")\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      \r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n        \r\n        <div class=\"newT\">\r\n          <Link class=\"btn btn-outline-success\" to=\"/\">Homepage</Link>\r\n        </div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">User's ID</div>\r\n          <input type=\"text\" class=\"form-control\" id=\"uid\" value={this.state.uid} readOnly />\r\n        </div><div class=\"col-1\"></div>\r\n\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">User's Name</div>\r\n          <input type=\"text\" class=\"form-control\" id=\"uid\" value={this.state.name} onChange={(value)=> this.setState({name:value.target.value})} />\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-6\">\r\n          <button type=\"submit\" class=\"btn btn-primary col-12\" onClick={()=>this.updateMe()}>Update</button>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n\r\n        <div class=\"col-12\">\r\n          <div id=\"reply\"></div>\r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  updateMe()\r\n  {\r\n    if (this.state.name === \"\")\r\n    {\r\n      alert (\"Full Name Is Empty\")\r\n    }\r\n    else\r\n    {\r\n      let userId = this.props.match.params.id;\r\n\r\n      const linkTo = \"https://todobud.herokuapp.com/api/users/\"+userId;\r\n\r\n      let reply = document.getElementById('reply');\r\n\r\n      const upadtedName = {\r\n        name: this.state.name\r\n      }\r\n\r\n      axios.patch(linkTo,upadtedName)\r\n      .then(response => \r\n      {\r\n        if (response.status === 201)\r\n        {\r\n          reply.innerHTML = \"Name Successfully Updated\";\r\n          window.location.href = '/';\r\n        }\r\n\r\n        if (response.status === 400)\r\n        {\r\n          reply.innerHTML = \"Error updating Name\";\r\n        }\r\n      })\r\n      .catch ( error => \r\n        {\r\n          if (error.response.status === 400)\r\n          {\r\n            reply.innerHTML = \"User with such ID does not exist\";\r\n          }\r\n\r\n          if (error.response.status === 500)\r\n          {\r\n            reply.innerHTML = \"We Encoutered An Error Getting User\";\r\n          }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default UserEdit;","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst linkTo = \"https://todobud.herokuapp.com\"\r\n\r\nclass UserView extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      todos:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    let userId = this.props.match.params.id;\r\n\r\n    const url = linkTo+\"/api/users/\"+userId\r\n    axios.get(url)\r\n    .then(res =>\r\n      {\r\n        if (res.data)\r\n        {\r\n          const userName = res.data.Name;\r\n          this.setState({ name : userName, todos: res.data.todos })\r\n        }\r\n        else\r\n        {\r\n          alert(\"We Encoutered An Error While Getting User's Data\")\r\n        }\r\n    })\r\n    .catch(error=>{\r\n      alert(\"This User's Todo List Is Empty\");\r\n      window.location.href = '/';\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    const { todos } = this.state\r\n    return (\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n        \r\n            <table class=\"table\">\r\n              {\r\n                todos.length ?\r\n                todos.map(todo => <div key={todo.id}>\r\n                <tbody class=\"thead-dark\">\r\n                    <tr>\r\n                      <th>{todo.id}</th>\r\n                      <td class=\"col-4\">{todo.description}</td>\r\n                      <td class=\"col-4\">{todo.state}</td>\r\n                      <td class=\"col-2\">{todo.user_id}</td>\r\n                      <td class=\"col-2\"><Link class=\"btn btn-outline-info\" to={\"/manage/\"+todo.id}>Update</Link></td>\r\n                    </tr>\r\n                  </tbody>\r\n                  </div>) : null\r\n                }\r\n                \r\n            </table>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default UserView;","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst linkTo = \"https://todobud.herokuapp.com\"\r\n\r\nclass TodoEdit extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tid: this.props.match.params.id,\r\n      description: \"\",\r\n      state: \"\",\r\n      user_id: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    let taskId = this.props.match.params.id;\r\n\r\n    const url = linkTo+\"/api/todos/\"+taskId\r\n    axios.get(url)\r\n    .then(res =>\r\n      {\r\n        if (res.data)\r\n        {\r\n          const taskDescription = res.data.Description;\r\n          const tastStatus = res.data.State;\r\n          const taskUserId = res.data.User_id;\r\n\r\n          this.setState({ description : taskDescription, state : tastStatus, user_id : taskUserId })\r\n        }\r\n        else\r\n        {\r\n          alert(\"We Encoutered An Error While Getting Todo Details\")\r\n        }\r\n    })\r\n    .catch(error=>{\r\n      alert(\"We Encoutered An Error Processing Todo\")\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      \r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n        \r\n        <div class=\"newT\">\r\n          <Link class=\"btn btn-outline-success\" to=\"/\">Homepage</Link>\r\n        </div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">Todo's ID</div>\r\n          <input type=\"text\" class=\"form-control\" id=\"uid\" value={this.props.match.params.id} readOnly />\r\n        </div><div class=\"col-1\"></div>\r\n\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">Todo's Description</div>\r\n          <textarea class=\"form-control\" id=\"describe\" rows=\"3\" value={this.state.description} onChange={(value)=> this.setState({description:value.target.value})}></textarea>\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">Todo's State</div>\r\n          <select class=\"form-control\" id=\"tstate\" onChange={(value)=> this.setState({state:value.target.value})}>\r\n            <option value=\"todo\">Todo</option>\r\n            <option value=\"done\">Done</option>\r\n          </select>\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"form-group col-10\">\r\n          <div align=\"left\" class=\"col-12\">User's ID</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"uid\" value={this.state.user_id} onChange={(value)=> this.setState({user_id:value.target.value})} readOnly />\r\n        </div><div class=\"col-1\"></div>\r\n\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-6\">\r\n          <button type=\"submit\" class=\"btn btn-primary col-12\" onClick={()=>this.updateTodo()}>Update</button>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n\r\n        <div class=\"col-12\">\r\n          <div id=\"reply\"></div>\r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  updateTodo()\r\n  {\r\n    if (this.state.description === \"\")\r\n    {\r\n      alert (\"Todo's Description Is Empty\")\r\n    }\r\n    else\r\n    {\r\n      let taskId = this.props.match.params.id;\r\n\r\n      const linkTo = \"https://todobud.herokuapp.com/api/todos/\"+taskId;\r\n\r\n      let reply = document.getElementById('reply');\r\n\r\n      const upadtedTodo = {\r\n            description: this.state.description,\r\n            state: this.state.state,\r\n            user_id: this.state.user_id\r\n      }\r\n\r\n      axios.patch(linkTo,upadtedTodo)\r\n      .then(response => \r\n      {\r\n        if (response.status === 201)\r\n        {\r\n          reply.innerHTML = \"Task Successfully Updated\";\r\n          window.location.href = '/';\r\n        }\r\n\r\n        if (response.status === 400)\r\n        {\r\n          reply.innerHTML = \"Error Updating Todo\";\r\n        }\r\n      })\r\n      .catch ( error => \r\n        {\r\n          if (error.response.status === 400)\r\n          {\r\n            reply.innerHTML = \"User with such ID does not exist\";\r\n          }\r\n\r\n          if (error.response.status === 500)\r\n          {\r\n            reply.innerHTML = \"We Encoutered An Error Verifying User\";\r\n          }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default TodoEdit;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport AllUsers from './components/users';\nimport CreateTodo from './components/new-todo';\nimport UserEdit from './components/edit-user';\nimport UserView from './components/view-user';\nimport TodoEdit from './components/edit-todo';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">      \n\n        <div class=\"container\">\n            <div class=\"row\">\n\n              <Route path=\"/\" exact component={AllUsers} />\n              <Route path=\"/new-todo\" component={CreateTodo} />\n              <Route path=\"/edit-user/:id\" component={UserEdit} />\n              <Route path=\"/view-user/:id\" component={UserView} />\n              <Route path=\"/edit-todo/:id\" component={TodoEdit} />\n\n            </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}